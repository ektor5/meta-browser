From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Raine Makelainen <raine.makelainen@jolla.com>
Date: Mon, 25 Oct 2021 12:53:33 +0300
Subject: [PATCH] [sailfishos][docshell] Align / fix parentprocess checks.
 JB#56074 OMP#JOLLA-482

[sailfishos][docshell] Create CanonicalBrowsingContext. JB#56074 OMP#JOLLA-482

[sailfishos][browserchild] Add parentIsActive attribute to the nsIBrowserChild. Fixes JB#56063 OMP#JOLLA-474

Also make sure that nsDocShell has nsIBrowserChild available.

Signed-off-by: Raine Makelainen <raine.makelainen@jolla.com>
---
 docshell/base/BrowsingContext.cpp          |  2 +-
 docshell/base/nsDocShell.cpp               |  4 ++--
 dom/base/nsFocusManager.cpp                |  3 ++-
 dom/interfaces/base/nsIBrowserChild.idl    |  5 +++++
 dom/ipc/BrowserChild.cpp                   | 10 ++++++++++
 security/manager/ssl/nsSecureBrowserUI.cpp |  1 +
 6 files changed, 21 insertions(+), 4 deletions(-)

diff --git a/docshell/base/BrowsingContext.cpp b/docshell/base/BrowsingContext.cpp
index 96d26c98f288..9caf8672bf78 100644
--- a/docshell/base/BrowsingContext.cpp
+++ b/docshell/base/BrowsingContext.cpp
@@ -211,7 +211,7 @@ already_AddRefed<BrowsingContext> BrowsingContext::CreateDetached(
           : BrowsingContextGroup::Select(parentWC, aOpener);
 
   RefPtr<BrowsingContext> context;
-  if (XRE_IsParentProcess()) {
+  if (true) {
     context =
         new CanonicalBrowsingContext(parentWC, group, id,
                                      /* aOwnerProcessId */ 0,
diff --git a/docshell/base/nsDocShell.cpp b/docshell/base/nsDocShell.cpp
index bb7d65805667..b8b4ab4a5c54 100644
--- a/docshell/base/nsDocShell.cpp
+++ b/docshell/base/nsDocShell.cpp
@@ -2695,7 +2695,7 @@ nsDocShell::SetTreeOwner(nsIDocShellTreeOwner* aTreeOwner) {
   // If we're in the content process and have had a TreeOwner set on us, extract
   // our BrowserChild actor. If we've already had our BrowserChild set, assert
   // that it hasn't changed.
-  if (mTreeOwner && XRE_IsContentProcess()) {
+  if (mTreeOwner) {
     nsCOMPtr<nsIBrowserChild> newBrowserChild = do_GetInterface(mTreeOwner);
     MOZ_ASSERT(newBrowserChild,
                "No BrowserChild actor for tree owner in Content!");
@@ -5570,7 +5570,7 @@ nsDocShell::OnStateChange(nsIWebProgress* aProgress, nsIRequest* aRequest,
 NS_IMETHODIMP
 nsDocShell::OnLocationChange(nsIWebProgress* aProgress, nsIRequest* aRequest,
                              nsIURI* aURI, uint32_t aFlags) {
-  if (XRE_IsParentProcess()) {
+  if (true) {
     // Since we've now changed Documents, notify the BrowsingContext that we've
     // changed. Ideally we'd just let the BrowsingContext do this when it
     // changes the current window global, but that happens before this and we
diff --git a/dom/base/nsFocusManager.cpp b/dom/base/nsFocusManager.cpp
index 7178d5a58a67..bda045d7ee16 100644
--- a/dom/base/nsFocusManager.cpp
+++ b/dom/base/nsFocusManager.cpp
@@ -909,7 +909,8 @@ nsFocusManager::WindowShown(mozIDOMWindowProxy* aWindow, bool aNeedsFocus) {
 
   if (nsIDocShell* docShell = window->GetDocShell()) {
     if (nsCOMPtr<nsIBrowserChild> child = docShell->GetBrowserChild()) {
-      bool active = static_cast<BrowserChild*>(child.get())->ParentIsActive();
+      bool active = false;
+      (void)child->GetParentIsActive(&active);
       ActivateOrDeactivate(window, active);
     }
   }
diff --git a/dom/interfaces/base/nsIBrowserChild.idl b/dom/interfaces/base/nsIBrowserChild.idl
index e145bc43e53c..6c90c653a000 100644
--- a/dom/interfaces/base/nsIBrowserChild.idl
+++ b/dom/interfaces/base/nsIBrowserChild.idl
@@ -36,6 +36,11 @@ interface nsIBrowserChild : nsISupports
    */
   attribute boolean hasSiblings;
 
+  /*
+   * Indicates whether parent is active.
+   */
+  attribute boolean parentIsActive;
+
   /**
    * Tell the nsIBrowserChild that it should begin sending its nsIWebProgress
    * events to its nsIBrowserParent.
diff --git a/dom/ipc/BrowserChild.cpp b/dom/ipc/BrowserChild.cpp
index b1e658a2dc87..a4c647ebd219 100644
--- a/dom/ipc/BrowserChild.cpp
+++ b/dom/ipc/BrowserChild.cpp
@@ -3486,6 +3486,16 @@ NS_IMETHODIMP BrowserChild::BeginSendingWebProgressEventsToParent() {
   return NS_OK;
 }
 
+nsresult BrowserChild::GetParentIsActive(bool* aParentIsActive) {
+  *aParentIsActive = mParentIsActive;
+  return NS_OK;
+}
+
+nsresult BrowserChild::SetParentIsActive(bool aParentIsActive) {
+  mParentIsActive = aParentIsActive;
+  return NS_OK;
+}
+
 nsresult BrowserChild::GetHasSiblings(bool* aHasSiblings) {
   *aHasSiblings = mHasSiblings;
   return NS_OK;
diff --git a/security/manager/ssl/nsSecureBrowserUI.cpp b/security/manager/ssl/nsSecureBrowserUI.cpp
index fd9a26d42b79..3d4b5c75fb29 100644
--- a/security/manager/ssl/nsSecureBrowserUI.cpp
+++ b/security/manager/ssl/nsSecureBrowserUI.cpp
@@ -58,6 +58,7 @@ static bool GetWebProgressListener(CanonicalBrowsingContext* aBrowsingContext,
   MOZ_ASSERT(aOutBrowser);
   MOZ_ASSERT(aOutManager);
   MOZ_ASSERT(aOutListener);
+  return true;
 
   nsCOMPtr<nsIBrowser> browser;
   RefPtr<Element> currentElement = aBrowsingContext->GetEmbedderElement();
-- 
2.31.1

